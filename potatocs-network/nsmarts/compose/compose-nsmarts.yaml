version: '3.7'

volumes:
  orderer.nsmarts.co.kr:
  orderer2.nsmarts.co.kr:
  couchdb0:
  couchdb1:
  peer0.nsmarts.co.kr:
  peer1.nsmarts.co.kr:

networks:
  blockchain_network:
    name: test_network

services:

  orderer.nsmarts.co.kr:
    container_name: orderer.nsmarts.co.kr
    image: hyperledger/fabric-orderer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_HOST=orderer.nsmarts.co.kr
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=NsmartsMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_DEBUG_BROADCASTTRACEDIR=data/logs
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_ADMIN_TLS_CLIENTAUTHREQUIRED=true
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/nsmarts/admin/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7053
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer.nsmarts.co.kr:9443
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /root
    command: orderer
    volumes:
      - ../../organizations/peerOrganizations/nsmarts.co.kr/orderers/orderer.nsmarts.co.kr:/var/hyperledger/orderer/
      - ../../organizations/peerOrganizations/nsmarts.co.kr/admin:/var/hyperledger/nsmarts/admin/
      - orderer.nsmarts.co.kr:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
      - 7053:7053
      - 9443:9443
    networks:
      - blockchain_network

  orderer2.nsmarts.co.kr:
    container_name: orderer2.nsmarts.co.kr
    image: hyperledger/fabric-orderer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_HOST=orderer2.nsmarts.co.kr
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_LOCALMSPID=NsmartsMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_DEBUG_BROADCASTTRACEDIR=data/logs
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls-msp/signcerts/cert.pem
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls-msp/keystore/key.pem
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_ADMIN_TLS_CLIENTAUTHREQUIRED=true
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/nsmarts/admin/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:7055
      - ORDERER_OPERATIONS_LISTENADDRESS=orderer2.nsmarts.co.kr:9446
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /root
    command: orderer
    volumes:
      - ../../organizations/peerOrganizations/nsmarts.co.kr/orderers/orderer2.nsmarts.co.kr:/var/hyperledger/orderer/
      - ../../organizations/peerOrganizations/nsmarts.co.kr/admin:/var/hyperledger/nsmarts/admin/
      - orderer2.nsmarts.co.kr:/var/hyperledger/production/orderer
    ports:
      - 7052:7050
      - 7055:7055
      - 9446:9446
    networks:
      - blockchain_network

  # couchdb가 먼저 실행 되어야한다.
  couchdb0:
    container_name: couchdb0
    image: couchdb:3.3.2
    labels:
      service: hyperledger-fabric
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw

    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - blockchain_network

  peer0.nsmarts.co.kr:
    container_name: peer0.nsmarts.co.kr
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=test_network
      - FABRIC_LOGGING_SPEC=INFO
      # - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # Peer specific variables
      - CORE_PEER_ID=peer0.nsmarts.co.kr
      - CORE_PEER_ADDRESS=peer0.nsmarts.co.kr:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.nsmarts.co.kr:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      # bootstrap peer is the other peer in the same org
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.nsmarts.co.kr:9051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.nsmarts.co.kr:7051
      - CORE_PEER_LOCALMSPID=NsmartsMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer0.nsmarts.co.kr:9444
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer0nsmarts"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      # CouchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true
    depends_on:
      - couchdb0
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../../organizations/peerOrganizations/nsmarts.co.kr/peers/peer0.nsmarts.co.kr:/etc/hyperledger/fabric
      - peer0.nsmarts.co.kr:/var/hyperledger/production
      - ../../configtx:/etc/hyperledger/peercfg
    working_dir: /root
    command: peer node start
    ports:
      - 7051:7051
      - 9444:9444
    networks:
      - blockchain_network

  # couchdb가 먼저 실행 되어야한다.
  couchdb1:
    container_name: couchdb1
    image: couchdb:3.3.2
    # image: hyperledger/fabric-couchdb:0.4.22
    # image: hyperledger/fabric-couchdb:x86_64-0.4.7
    labels:
      service: hyperledger-fabric
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      # - COUCHDB_USER=
      # - COUCHDB_PASSWORD=
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=adminpw
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "6984:5984"
    networks:
      - blockchain_network

  peer1.nsmarts.co.kr:
    container_name: peer1.nsmarts.co.kr
    image: hyperledger/fabric-peer:latest
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=test_network
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls-msp/signcerts/cert.pem
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls-msp/keystore/key.pem
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls-msp/tlscacerts/tls-0-0-0-0-5054.pem
      # Peer specific variables
      - CORE_PEER_ID=peer1.nsmarts.co.kr
      - CORE_PEER_ADDRESS=peer1.nsmarts.co.kr:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer1.nsmarts.co.kr:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.nsmarts.co.kr:9051
      # bootstrap peer is the other peer in the same org
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.nsmarts.co.kr:7051
      - CORE_PEER_LOCALMSPID=NsmartsMSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=peer1.nsmarts.co.kr:9445
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"peer1nsmarts"}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      # CouchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      # - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
      - CORE_LEDGER_HISTORY_ENABLEHISTORYDATABASE=true
    depends_on:
      - couchdb1
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../../organizations/peerOrganizations/nsmarts.co.kr/peers/peer1.nsmarts.co.kr:/etc/hyperledger/fabric
      - peer1.nsmarts.co.kr:/var/hyperledger/production
      - ../../configtx:/etc/hyperledger/peercfg
    working_dir: /root
    command: peer node start
    ports:
      - 9051:9051
      - 9445:9445
    networks:
      - blockchain_network

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:latest
    labels:
      service: hyperledger-fabric
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - FABRIC_LOGGING_SPEC=INFO
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      #- FABRIC_LOGGING_SPEC=DEBUG
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../../organizations:/opt/gopath/src/github.com/hyperledger/fabric/peer/organizations
      - ../scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
      - ../../configtx:/etc/hyperledger/peercfg
    depends_on:
      - peer0.nsmarts.co.kr
      - peer1.nsmarts.co.kr
    
    networks:
      - blockchain_network